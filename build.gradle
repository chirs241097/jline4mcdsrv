plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation include("org.jline:jline:${project.jline_version}")
	modImplementation include("org.jline:jline-terminal-jansi:${project.jline_version}")

	include modApi("com.moandjiezana.toml:toml4j:${project.toml4j_version}") {
		exclude(module: "gson")
	}
}

processResources {
	def stringProperties = [
		"version": project.version,
		"java_version": project.java_version
	]
	stringProperties.each { inputs.property it.key, it.value }

	filesMatching(["fabric.mod.json", "jline4mcdsrv.mixins.json"]) {
		expand(stringProperties ) {
			escapeBackslash = true
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.compilerArgs.add('-Xlint:deprecation')
	it.options.release = project.java_version as Integer
}

java {
	targetCompatibility = sourceCompatibility = JavaVersion.toVersion(project.java_version as Integer)
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			mavenJava(MavenPublication) {
				from components.java
			}
		}
	}
}
